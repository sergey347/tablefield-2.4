diff --git a/tablefield.module b/tablefield.module
index b97238d..6b2b4b8 100644
--- a/tablefield.module
+++ b/tablefield.module
@@ -664,6 +664,14 @@ function tablefield_import_csv($form, &$form_state) {
       if (($handle = fopen($file->uri, "r")) !== FALSE) {
         tablefield_delete_table_values($form_state['values'][$field_name][$language][$delta]['tablefield']);
         tablefield_delete_table_values($form_state['input'][$field_name][$language][$delta]['tablefield']);
+        
+        // Checking the encoding of the CSV file
+        $encoding = 'UTF-8'; // The default encoding.
+        if (function_exists('mb_detect_encoding')) {
+          $file_contents = file_get_contents($file->uri);
+          $encodings_list = implode(',',variable_get('tablefield_detect_encodings', array('UTF-8', 'ISO-8859-1', 'WINDOWS-1251')));
+          $encoding = mb_detect_encoding($file_contents, $encodings_list);
+        }
 
         // Populate CSV values
         $max_col_count = 0;
@@ -672,7 +680,7 @@ function tablefield_import_csv($form, &$form_state) {
           $col_count = count($csv);
           foreach ($csv as $col_id => $col) {
             $form_state['input'][$field_name][$language][$delta]['tablefield']['cell_' . $row_count . '_' . $col_id] =
-            $form_state['values'][$field_name][$language][$delta]['tablefield']['cell_' . $row_count . '_' . $col_id] = $col;
+            $form_state['values'][$field_name][$language][$delta]['tablefield']['cell_' . $row_count . '_' . $col_id] = tablefield_convert_encoding($col, $encoding);
           }
           $max_col_count = $col_count > $max_col_count ? $col_count : $max_col_count;
           $row_count++;
@@ -847,3 +855,28 @@ function theme_tablefield_view($variables) {
     . $export
     . '</div>';
 }
+
+/**
+ * Helper function to detect and convert strings not in UTF-8 to UTF-8.
+ *
+ * @param string $data
+ *   The string which needs converting.
+ * @param string $encoding
+ *   The encoding of the CSV file.
+ *
+ * @return string
+ */
+function tablefield_convert_encoding($data, $encoding) {
+  // Converting UTF-8 to UTF-8 will not work.
+  if ($encoding == 'UTF-8') {
+    return $data;
+  }
+
+  // Try convert the data to UTF-8
+  if ($encoded_data = drupal_convert_to_utf8($data, $encoding)) {
+    return $encoded_data;
+  }
+
+  // Fallback on the input data.
+  return $data;
+}
